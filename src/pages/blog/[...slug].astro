---
import { Image } from 'astro:assets';
import { type CollectionEntry, getCollection, render } from 'astro:content';
import AppWrapper from '../../building-blocks/AppWrapper.astro';
import { siteConfig } from '../../config/site';
import { formatDate } from '../../utils';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);
---

<AppWrapper 
	title={`${post.data.title} - ${siteConfig.title}`} 
	description={post.data.description}
	ogImage={post.data.heroImage ? new URL(post.data.heroImage.src, siteConfig.url).href : undefined}
	ogType="article"
>
	<article class="w-full md:max-w-4xl mx-auto md:px-6 py-8 md:py-16">
		<header class="mb-8 md:mb-12">
			{post.data.heroImage && (
				<div class="mb-6 md:mb-8 rounded-lg overflow-hidden flex justify-center">
					<Image 
						src={post.data.heroImage}
						width={800} 
						alt="" 
						class="h-80 md:h-96 object-cover" 
					/>
				</div>
			)}
			<div class="prose prose-invert mx-auto">
			<h1 class="text-2xl md:text-4xl font-bold mb-3 md:mb-4 leading-tight">{post.data.title}</h1>
			<p class="text-lg md:text-xl text-white/70 mb-3 md:mb-4 leading-relaxed">{post.data.description}</p>
			<time class="text-sm text-white/50 font-mono block">
				{formatDate(post.data.pubDate)}
			</time>
			</div>
		</header>
		
		<div class="prose prose-invert overflow-hidden mx-auto">
			<Content />
		</div>
	</article>
</AppWrapper>
